(ns gol-cljs.worlds
  (:require [gol-cljs.game :refer [Cell]]))

(defn generate-world
  [& args]
  (into #{} (map #(Cell. % :alive) args)))

(def world-1
  {:size [20 20]
   :world (generate-world [9 8] [9 9] [9 10])})

(def world-2
  {:size [20 20]
   :world (generate-world        [10 10]
                          [9 11] [10 11] [11 11]
                          [9 12] [10 12] [11 12])})

(def world-3
  {:size [20 20]
   :world (generate-world [ 7  7] [ 8  7] [ 9  7] [10  7] [11  7]
                          [ 7  8]         [ 9  8]         [11  8]
                          [ 7  9]         [ 9  9]         [11  9]
                          [ 7 10]         [ 9 10]         [11 10]
                          [ 7 11] [ 8 11] [ 9 11] [10 11] [11 11])})

(def world-4
  {:size [50 50]
   :world (generate-world [23 23] [24 23] [25 23] [26 23] [27 23]
                          [23 24]         [25 24]         [27 24]
                          [23 25]         [25 25]         [27 25]
                          [23 26]         [25 26]         [27 26]
                          [23 27] [24 27] [25 27] [26 27] [27 27])})

(def world-5
  {:size [50 50]
   :world (generate-world [23 19] [24 19] [25 19] [26 19] [27 19] [28 19]
                          [23 20] [24 20] [25 20] [26 20] [27 20] [28 20]
                          [23 21]                                 [28 21]
                          [23 22]                                 [28 22]
                          [23 23] [24 23] [25 23]                 [28 23]
                          [23 24] [24 24]                 [27 24] [28 24]
                          [23 25]                 [26 25] [27 25] [28 25]
                          [23 26]                 [26 26] [27 26] [28 26]
                          [23 27] [24 27]                 [27 27] [28 27]
                          [23 28] [24 28] [25 28]                 [28 28]
                          [23 29]                                 [28 29]
                          [23 30]                                 [28 30]
                          [23 31] [24 31] [25 31] [26 31] [27 31] [28 31]
                          [23 32] [24 32] [25 32] [26 32] [27 32] [28 32])})

(def world-6
  {:size [100 100]
   :world (generate-world [47 44] [48 44] [49 44] [50 44] [51 44] [52 44]
                          [47 45] [48 45] [49 45] [50 45] [51 45] [52 45]
                          [47 46]                                 [52 46]
                          [47 47]                                 [52 47]
                          [47 48] [48 48] [49 48]                 [52 48]
                          [47 49] [48 49]                 [51 49] [52 49]
                          [47 50]                 [50 50] [51 50] [52 50]
                          [47 51]                 [50 51] [51 51] [52 51]
                          [47 52] [48 52]                 [51 52] [52 52]
                          [47 53] [48 53] [49 53]                 [52 53]
                          [47 54]                                 [52 54]
                          [47 55]                                 [52 55]
                          [47 56] [48 56] [49 56] [50 56] [51 56] [52 56]
                          [47 57] [48 57] [49 57] [50 57] [51 57] [52 57])})
